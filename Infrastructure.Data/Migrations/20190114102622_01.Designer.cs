// <auto-generated />
using System;
using Infrastructure.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190114102622_01")]
    partial class _01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Identity.Role", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastModifyDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("tbl_role");
                });

            modelBuilder.Entity("Core.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastModifyDate");

                    b.Property<string>("LastName");

                    b.Property<string>("Mobile");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("tbl_user");
                });

            modelBuilder.Entity("Core.Entities.Identity.UserRoles", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_user_role");
                });

            modelBuilder.Entity("Core.Entities.Identity.UserToken", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("AccessToken");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("ExpireDate");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastModifyDate");

                    b.HasKey("UserId");

                    b.ToTable("tbl_user_token");
                });

            modelBuilder.Entity("Core.Entities.Identity.UserRoles", b =>
                {
                    b.HasOne("Core.Entities.Identity.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Core.Entities.Identity.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Core.Entities.Identity.UserToken", b =>
                {
                    b.HasOne("Core.Entities.Identity.User", "User")
                        .WithOne("Token")
                        .HasForeignKey("Core.Entities.Identity.UserToken", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
